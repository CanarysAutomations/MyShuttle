
name: MyShuttle.Maven

on: 
  push:
    branches: [master]
      
jobs:
  build:
    name: üß™ Build
    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Build App
      run: mvn -f pom.xml -DskipITs package 
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
       name: myshuttle
       path: target/myshuttle.war

        # Publishes the unit test results
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: target/surefire-reports/TEST-*.xml  

    # - name: Generate a table of test results
    #   run: |
    #     echo "| Test Result :test_tube: | Passed :green_circle: | Failed :x: | Skipped | Time Duration :alarm_clock: |" >> $GITHUB_STEP_SUMMARY
    #     echo "| ----------- | ------ | ------ | ------- | ------------- |" >> $GITHUB_STEP_SUMMARY
    #     echo "| :green_circle: Pass | 122 | 0 | 3 | 12m 3s |" >> $GITHUB_STEP_SUMMARY
    #     echo "| :red_circle: Failed | 121 | 2 | 3 | 10m 3s |" >> $GITHUB_STEP_SUMMARY
    #     echo "| :green_circle: Pass  | 4 | 12 | 3 | 9m 4s |" >> $GITHUB_STEP_SUMMARY
    #     echo "| :white_circle: Pass  | 9 | 12 | 3 | 9m 4s |" >> $GITHUB_STEP_SUMMARY
    #     echo "| :yellow_circle: Pass  | 7 | 12 | 3 | 9m 4s |" >> $GITHUB_STEP_SUMMARY
    #     echo "| :black_circle: Pass  | 6 | 12 | 3 | 9m 4s |" >> $GITHUB_STEP_SUMMARY
  
  code-analysis:
     name: üîÜ Code Analysis
     runs-on: ubuntu-latest
     needs: [build]
     steps:
     
     - name: Checkout
       uses: actions/checkout@v2
       with:
         # Make sure the actual branch is checked out when running on pull requests
         ref: ${{ github.head_ref }}
     
     - name: Cache SonarCloud packages
       uses: actions/cache@v1
       with:
         path: ~/.sonar/cache
         key: ${{ runner.os }}-sonar
         restore-keys: ${{ runner.os }}-sonar
      
     - name: Cache Maven packages
       uses: actions/cache@v1
       with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
     
     - name: Build and analyze
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=CanarysAutomations_MyShuttle -DskipITs


  run-lint:
    name: üîç Lint Code Base
    needs: build
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: true
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#=========================================================================================================

#   deploy:
#     runs-on: [self-hosted, production]
#     needs: build
#     name: DEPLOY TO AZURE VM
#     steps:
#       - name: Download Artifacts
#         uses: actions/download-artifact@v1.0.0
#         with:
#          name: myshuttle
      
#       - name: Deploy to Tomcat
#         working-directory: myshuttle
#         run:
#          sudo curl -v -u ${{secrets.TOMCAT_USER}}:${{secrets.TOMCAT_PASSWORD}} -T myshuttle.war "http://localhost:${{secrets.TOMCAT_PORT}}/manager/text/deploy?path=/myshuttle&update=true"
     
